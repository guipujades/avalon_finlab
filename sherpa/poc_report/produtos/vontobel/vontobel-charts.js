// Configurar gráficos específicos do Vontobel Fund
document.addEventListener('DOMContentLoaded', function() {
    // Gráfico de Alocação Geográfica
    const geoCtx = document.getElementById('geoChart');
    if (geoCtx) {
        new Chart(geoCtx.getContext('2d'), {
            type: 'pie',
            data: {
                labels: ['China', 'Índia', 'Taiwan', 'Coreia do Sul', 'Brasil', 'Outros'],
                datasets: [{
                    data: [28, 18, 16, 14, 8, 16],
                    backgroundColor: ['#1a365d', '#2d3748', '#4a5568', '#718096', '#a0aec0', '#e2e8f0'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { position: 'right' } }
            }
        });
    }

    // Gráfico de Setores do Portfólio
    const sectorCtx = document.getElementById('sectorChart');
    if (sectorCtx) {
        new Chart(sectorCtx.getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: ['Tecnologia', 'Consumo', 'Financeiro', 'Saúde', 'Outros'],
                datasets: [{
                    data: [24, 22, 18, 12, 24],
                    backgroundColor: ['#1a365d', '#4a5568', '#718096', '#a0aec0', '#e2e8f0'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { position: 'bottom' } }
            }
        });
    }

    // Gráfico de Taxas
    const terCtx = document.getElementById('terChart');
    if (terCtx) {
        new Chart(terCtx.getContext('2d'), {
        type: 'bar',
        data: {
                labels: [
                    'EIMI',
                    'VFEM',
                    'Abrdn EM',
                    'Templeton GEM',
                    'JPM EM Opp',
                    'Vontobel EM'
                ],
            datasets: [{
                    label: 'Taxa de Administração (%)',
                    data: [0.18, 0.22, 0.87, 1.00, 1.75, 2.08],
                    backgroundColor: ['#4b5563', '#4b5563', '#4b5563', '#4b5563', '#4b5563', '#1a365d'],
                    borderColor: ['#374151', '#374151', '#374151', '#374151', '#374151', '#1e3a8a'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                    legend: { display: false },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return context.dataset.label + ': ' + context.raw.toFixed(2) + '%';
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                        max: 2.5, 
                        ticks: { callback: v => v.toFixed(2) + '%' },
                    title: {
                        display: true,
                        text: 'Taxa de Administração (%)'
                    }
                },
                x: {
                        title: { display: true, text: 'Fundos de Mercados Emergentes' } 
                }
            }
        }
    });
    }
    
    // Gráfico de Desempenho
    const performanceCanvas = document.getElementById('performanceChart');
    const startDateSelector = document.getElementById('startDateSelector');
    const resetButton = document.getElementById('resetChart');
    if (!performanceCanvas || !startDateSelector || !resetButton) return;
    const performanceCtx = performanceCanvas.getContext('2d');

    // Dados originais
    const performanceLabels = [
        '01/2011', '02/2011', '03/2011', '04/2011', '05/2011', '06/2011', '07/2011', '08/2011', '09/2011', '10/2011', '11/2011', '12/2011',
        '01/2012', '02/2012', '03/2012', '04/2012', '05/2012', '06/2012', '07/2012', '08/2012', '09/2012', '10/2012', '11/2012', '12/2012',
        '01/2013', '02/2013', '03/2013', '04/2013', '05/2013', '06/2013', '07/2013', '08/2013', '09/2013', '10/2013', '11/2013', '12/2013',
        '01/2014', '02/2014', '03/2014', '04/2014', '05/2014', '06/2014', '07/2014', '08/2014', '09/2014', '10/2014', '11/2014', '12/2014',
        '01/2015', '02/2015', '03/2015', '04/2015', '05/2015', '06/2015', '07/2015', '08/2015', '09/2015', '10/2015', '11/2015', '12/2015',
        '01/2016', '02/2016', '03/2016', '04/2016', '05/2016', '06/2016', '07/2016', '08/2016', '09/2016', '10/2016', '11/2016', '12/2016',
        '01/2017', '02/2017', '03/2017', '04/2017', '05/2017', '06/2017', '07/2017', '08/2017', '09/2017', '10/2017', '11/2017', '12/2017',
        '01/2018', '02/2018', '03/2018', '04/2018', '05/2018', '06/2018', '07/2018', '08/2018', '09/2018', '10/2018', '11/2018', '12/2018',
        '01/2019', '02/2019', '03/2019', '04/2019', '05/2019', '06/2019', '07/2019', '08/2019', '09/2019', '10/2019', '11/2019', '12/2019',
        '01/2020', '02/2020', '03/2020', '04/2020', '05/2020', '06/2020', '07/2020', '08/2020', '09/2020', '10/2020', '11/2020', '12/2020',
        '01/2021', '02/2021', '03/2021', '04/2021', '05/2021', '06/2021', '07/2021', '08/2021', '09/2021', '10/2021', '11/2021', '12/2021',
        '01/2022', '02/2022', '03/2022', '04/2022', '05/2022', '06/2022', '07/2022', '08/2022', '09/2022', '10/2022', '11/2022', '12/2022',
        '01/2023', '02/2023', '03/2023', '04/2023', '05/2023', '06/2023', '07/2023', '08/2023', '09/2023', '10/2023', '11/2023', '12/2023',
        '01/2024', '02/2024', '03/2024', '04/2024', '05/2024', '06/2024', '07/2024', '08/2024', '09/2024', '10/2024', '11/2024', '12/2024',
        '01/2025', '02/2025', '03/2025', '04/2025'
    ];

    // Dados de retorno acumulado do Vontobel (em %)
    const vontobel_returns = [
        -0.085624, 0.012109, 0.082009, 0.129687, 0.128945, 0.139783, 0.148415, 0.116766, -0.011368, 0.090112, 0.053979, 0.048365,
        0.109211, 0.173057, 0.182959, 0.188466, 0.081392, 0.139748, 0.152916, 0.163189, 0.203682, 0.199252, 0.240998, 0.251836,
        0.274748, 0.248959, 0.269946, 0.309115, 0.276548, 0.190055, 0.194574, 0.100632, 0.174345, 0.222075, 0.178705, 0.172403,
        0.098125, 0.140878, 0.195315, 0.198969, 0.242904, 0.283644, 0.302831, 0.340288, 0.265339, 0.299001, 0.302443, 0.230513,
        0.272506, 0.294076, 0.248853, 0.263045, 0.240203, 0.231483, 0.216162, 0.110852, 0.101726, 0.167761, 0.130234, 0.139007,
        0.079450, 0.051331, 0.137312, 0.147585, 0.158935, 0.200823, 0.232984, 0.249417, 0.257626, 0.221440, 0.118972, 0.113906,
        0.155970, 0.201423, 0.254078, 0.289134, 0.342883, 0.361117, 0.417108, 0.427452, 0.409147, 0.419791, 0.445968, 0.481501,
        0.583139, 0.493063, 0.476576, 0.470434, 0.406093, 0.372379, 0.395255, 0.345990, 0.323501, 0.215773, 0.280979, 0.259938,
        0.345848, 0.358505, 0.400092, 0.447133, 0.366271, 0.436772, 0.434530, 0.386800, 0.384788, 0.401327, 0.400480, 0.477159,
        0.434813, 0.342706, 0.127445, 0.218209, 0.224811, 0.321313, 0.441679, 0.474387, 0.447222, 0.485331, 0.595972, 0.695721,
        0.763627, 0.761297, 0.726965, 0.741033, 0.784527, 0.751536, 0.616889, 0.630587, 0.581762, 0.590447, 0.537757, 0.576273,
        0.489021, 0.483372, 0.430682, 0.353086, 0.341683, 0.267051, 0.268658, 0.261456, 0.152563, 0.111346, 0.211943, 0.195951,
        0.267457, 0.180241, 0.208960, 0.190055, 0.163436, 0.208783, 0.253477, 0.182077, 0.138283, 0.093412, 0.174486, 0.212949,
        0.154946, 0.191397, 0.193921, 0.178052, 0.192067, 0.230336, 0.203294, 0.214450, 0.290864, 0.215897, 0.174910, 0.160948,
        0.178334, 0.170797, 0.165643, 0.145573
    ];


    // Converter para decimal
    // const vontobel_returns = vontobel_returns_raw.map(x => x / 100);

    // Encontrar o índice de início dos dados reais do MSCI EM
    const msciStartLabel = '05/2014';
    const msciStartIndex = performanceLabels.findIndex(l => l === msciStartLabel);

    // Dados reais do MSCI EM (retornos acumulados em decimal)
    const msci_em_real = [
        0.0, 0.02865210108146976, 0.039951563506279264, 0.071025027446038, -0.004439088268905711, -0.0036319673161426813, -0.012510143853954103, -0.05004034450194461, -0.0556901141999947, -0.015334990217333866, -0.032687705845284465, 0.04116216796413319, 0.003228406839761222, -0.030669903463377057, -0.09483455675351105, -0.1731235188318344, -0.19370464129954634, -0.14164649441569443, -0.16949155151569173, -0.190980627326794, -0.24535915073572623, -0.2372881721219684, -0.1444713407790742, -0.14608558268460003, -0.17352707930821587, -0.14326073632122027, -0.096448798659037, -0.08111380844170313, -0.05891852103975592, -0.0661824556720414, -0.11339795381060613, -0.10855530506531896, -0.05972564199251884, -0.031073463939758628, -0.0016142419055259483, 0.016142034198806332, 0.04156572844051465, 0.052058069912561455, 0.10895878857040997, 0.1355931642412629, 0.13438255978340896, 0.17433412328968823, 0.18119449744559235, 0.22074250047549016, 0.31517349675261963, 0.2506052829861043, 0.24172718341958355, 0.22639219320224968, 0.18482646476173503, 0.1319611969251202, 0.16303466086487872, 0.12025825099521947, 0.12146893242436407, 0.018563320085804413, 0.06416465329013388, 0.04761898164365563, 0.13236475740150166, 0.1246973392641253, 0.13841801060464265, 0.15778852861450066, 0.07748184112556045, 0.14204997792078533, 0.12227597640583632, 0.06416465329013388, 0.08999190800822388, 0.12994347151450336, 0.1355931642412629, 0.21912825856996432, 0.1468926266660724, 0.08393865480508289, -0.07203389015134631, 0.0024212858869983034, 0.007869236861212325, 0.0907990289609868, 0.1815980579219738, 0.2413236229432021, 0.20782887311644527, 0.21832121458849185, 0.3434221143289986, 0.4483453751068842, 0.48748989463169123, 0.504035489306879, 0.48789337813678224, 0.5145277538076349, 0.5407586459733971, 0.5573042406485846, 0.4737691463198832, 0.4939467083112137, 0.451170221470264, 0.4568199141970235, 0.39669086567070444, 0.43886189634014605, 0.41525418575650885, 0.36763512714156255, 0.3385793886124209, 0.267957998614055, 0.26271186636367694, 0.17675540917668653, 0.1783696510822126, 0.1803873764928292, 0.04923322354918169, 0.021388166449184176, 0.16626306770463994, 0.15577072623259314, 0.248183997099106, 0.16787730961016578, 0.20338978484753945, 0.1945116852810187, 0.1618240564070248, 0.2247780282680143, 0.2970136601719062, 0.21953181904634578, 0.18724775064873334, 0.1355931642412629, 0.23607741372153335, 0.2832929118600982, 0.24092006246682063, 0.2792574610388645, 0.31517349675261963, 0.3208231894793794, 0.3317190914278074, 0.38458435926442225, 0.3958837447179413, 0.40556904220851564, 0.48870049908954516, 0.4241323622943203, 0.3962872282230323, 0.3777239081372279, 0.40193707489237296, 0.3926552609068896, 0.40556904220851564, 0.40556904220851564
    ];

    // Dados do VFEM.L (retornos acumulados em decimal)
    const vfem_returns = [
        0.0, 0.029315188444645424, 0.05079158580711507, 0.03292068665101433, 0.05706239666918367, 0.055494575023127934, 0.06944663364732051, 0.11381097529067419, 0.16711048900748815, 0.19031209276201433, 0.16726787375348895, 0.15817539622105348, 0.14908307726266945, 0.05831632098052042, 0.07117088859506882, 0.016303473945173286, 0.03480177133558371, 0.09327468419184792, 0.05361333176450733, 0.030725783918751803, -0.04624550561494856, -0.02759061634879445, 0.01839538283106057, 0.0066028649256715255, 0.053772698686150644, 0.06364924561566543, 0.09186559517122994, 0.15115048645761742, 0.09444821145913185, 0.1305131044010326, 0.14974797826013186, 0.10000504265483401, 0.14567754093509855, 0.1614376608931969, 0.17925250412213245, 0.22566847684232116, 0.1906953662442148, 0.12356264515472226, 0.06437678336342545, -0.02188900704417651, -0.04599067711437088, -0.011795451525339673, -0.012781861411987783, -0.02682700300434393, -0.05440540915118164, -0.025340609133675085, 0.06593762775122025, 0.051868620764130347, 0.024889069522352703, 0.17440330963074135, 0.23733580053414083, 0.2673031247651121, 0.3041771418042112, 0.3947902398305667, 0.3009716466424641, 0.3247314310578697, 0.3619433694004728, 0.41522314064788923, 0.44238084983639925, 0.4174539604027907, 0.4396676478171806, 0.4376580388639628, 0.4972263812672033, 0.5765934868562725, 0.502946623022859, 0.5499349687815265, 0.527995297327932, 0.5887335990823002, 0.6436070395461484, 0.6197188101491198, 0.5588021125869422, 0.5660946160620925, 0.5567186081257784, 0.5120931743068173, 0.5783075137777065, 0.5272579279889862, 0.5211677329714461, 0.430479867279862, 0.49701341631619167, 0.4679442555122719, 0.5444376821421197, 0.5200946623657154, 0.5742884544453222, 0.6093886621456148, 0.5573611501819955, 0.6268795385875683, 0.6799675938068588, 0.6035239594291462, 0.6257262295118362, 0.599371539319546, 0.6125490429897424, 0.690144717850776, 0.5897380071237808, 0.54290601537978, 0.3672012092222863, 0.4527482627419801, 0.49565919391735314, 0.607316257868048, 0.6382984560278913, 0.690517842593688, 0.6879579816821599, 0.7121295829090155, 0.8031472826274832, 0.879260448682107, 0.9275138982227338, 0.9119573080595895, 0.9102137863645978, 0.9355908675300919, 0.9192634489031593, 0.9878949326393287, 0.859646424266143, 0.9207215373056556, 0.9000247692668266, 0.8860115803458246, 0.8730395886462248, 0.8811833176292165, 0.8870881395806858, 0.821943857808551, 0.8119010459861578, 0.8027354658160333, 0.7887008693980941, 0.7737134015053753, 0.7545086567160393, 0.8441645224812018, 0.7379478170854661, 0.6145702278487115, 0.774736045562765, 0.7422223392146334, 0.8289012943131222, 0.7339676083956714, 0.7524061233687092, 0.7052731580751774, 0.6715503245852257, 0.7112379210180708, 0.7928012772188395, 0.7142186374619779, 0.7361337299376074, 0.672264383538618, 0.7195376868676264, 0.7658356012065581, 0.7241594861693299, 0.7801651453600758, 0.8228461441609387, 0.8637225702570264, 0.8594731028279778, 0.9297093559641763, 0.9131827683287024, 0.8866591967716861, 0.9964894876504113, 1.000099267356168, 0.9908168181101715, 1.0219350728061043, 1.0659890057438695, 1.0284499291332563, 1.004156860183039, 0.933800883638044
    ];

    // Ajustar MSCI EM para transição suave
    const offset = vontobel_returns[msciStartIndex] - msci_em_real[0];
    const msci_em_real_adjusted = msci_em_real.map(v => v + offset);
    const msci_em_returns = vontobel_returns.slice(0, msciStartIndex).concat(msci_em_real_adjusted);

    // Ajustar VFEM.L para transição suave
    const vfemStartIndex = performanceLabels.findIndex(l => l === '05/2012');
    const vfemOffset = vontobel_returns[vfemStartIndex] - vfem_returns[0];
    const vfem_returns_adjusted = vfem_returns.map(v => v + vfemOffset);
    const vfem_returns_final = vontobel_returns.slice(0, vfemStartIndex).concat(vfem_returns_adjusted);

    // Dados do S&P 500 TR (retornos acumulados em %)
    const sp500tr_returns = [
        0.000000, -0.002545, -0.028284, -0.029543, -0.024558, -0.026257, -0.028052, 0.013656, 0.010952, -0.029393, -0.025775, -0.016896,
        0.034401, -0.011302, -0.003699, -0.003299, -0.000368, -0.002527, 0.052592, 0.055246, -0.000245, 0.008652, 0.009061, 0.011452,
        0.209112, 0.167236, 0.164800, 0.170467, 0.207776, 0.208590, 0.166818, 0.163428, 0.166541, 0.175402, 0.175480, 0.215052,
        0.544853, 0.493583, 0.493124, 0.432348, 0.429872, 0.489398, 0.498473, 0.498605, 0.499118, 0.502581, 0.486335, 0.486667,
        0.722604, 0.712616, 0.707463, 0.700873, 0.681419, 0.666473, 0.686377, 0.716579, 0.702159, 0.724404, 0.724949, 0.688386,
        0.649804, 0.618930, 0.627569, 0.710485, 0.713929, 0.692057, 0.651999, 0.634103, 0.577113, 0.577358, 0.635494, 0.648259,
        0.982286, 0.952643, 0.960919, 0.972584, 0.971084, 0.978628, 0.994451, 0.996469, 0.971616, 0.971625, 0.977387, 0.973193,
        1.503340, 1.388632, 1.403919, 1.414103, 1.431080, 1.391240, 1.379343, 1.435166, 1.439065, 1.436370, 1.453698, 1.470266,
        1.449031, 1.267880, 1.212320, 1.288279, 1.477301, 1.472029, 1.304325, 1.326720, 1.336999, 1.347556, 1.347219, 1.485290,
        1.288820, 2.003485, 1.982595, 2.043567, 2.077872, 1.993147, 1.985058, 1.999786, 2.020549, 2.011929, 2.100871, 2.121016,
        2.546543, 2.595876, 2.599503, 2.474270, 2.499295, 2.519332, 2.572350, 2.592427, 2.677143, 2.675966, 2.568874, 2.570360,
        3.333005, 3.373876, 3.567247, 3.564675, 3.476492, 3.472502, 3.455202, 3.310283, 3.373399, 3.448781, 3.489530, 3.502249,
        2.991188, 2.709003, 2.701637, 2.729730, 2.686890, 2.771170, 3.035332, 2.990743, 2.768984, 2.795286, 2.844138, 2.857726,
        3.832059, 3.666896, 3.629677, 3.614413, 3.622842, 3.879788, 3.920069, 3.688176, 3.681910, 3.708512, 3.705522, 3.709457,
        4.638279, 4.854736, 4.928945, 5.028725, 5.052346, 4.962236, 4.896094, 4.905428, 4.860498, 4.815568, 5.060785, 5.044925
    ];

    // Preencher o seletor de datas
    performanceLabels.forEach((label, index) => {
        const option = document.createElement('option');
        option.value = index;
        option.textContent = label;
        startDateSelector.appendChild(option);
    });

    let chartInstance;

    function createChart(startIndex = 0) {
        if (chartInstance) {
            chartInstance.destroy();
        }
        const baseValueVontobel = vontobel_returns[startIndex];
        const baseValueMSCI = msci_em_returns[startIndex];
        const baseValueVFEM = vfem_returns_final[startIndex];
        const normalizedVontobel = vontobel_returns.slice(startIndex).map(value => value - baseValueVontobel);
        const normalizedMSCI = msci_em_returns.slice(startIndex).map(value => value - baseValueMSCI);
        const normalizedVFEM = vfem_returns_final.slice(startIndex).map(value => value - baseValueVFEM);
        const normalizedLabels = performanceLabels.slice(startIndex);
        chartInstance = new Chart(performanceCtx, {
            type: 'line',
            data: {
                labels: normalizedLabels,
                datasets: [
                    {
                        label: 'Vontobel Emerging Equity Fund',
                        data: normalizedVontobel,
                        backgroundColor: 'rgba(26, 54, 93, 0.5)',
                        borderColor: 'rgba(26, 54, 93, 1)',
                        borderWidth: 2,
                        pointRadius: 2,
                        tension: 0.1
                    },
                    {
                        label: 'MSCI EM (Benchmark, dados reais a partir de 05/2014)',
                        data: normalizedMSCI,
                        backgroundColor: 'rgba(153, 27, 27, 0.5)',
                        borderColor: 'rgba(153, 27, 27, 1)',
                        borderWidth: 2,
                        pointRadius: 0,
                        tension: 0.1
                    },
                    {
                        label: 'Vanguard FTSE Emerging Markets UCITS ETF (VFEM.L)',
                        data: normalizedVFEM,
                        backgroundColor: 'rgba(75, 192, 192, 0.5)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2,
                        pointRadius: 0,
                        tension: 0.1
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                // Exibir como percentual
                                return context.dataset.label + ': ' + (context.raw * 100).toFixed(2) + '%';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        ticks: {
                            callback: function(value) {
                                return (value * 100).toFixed(2) + '%';
                            }
                        },
                        title: {
                            display: true,
                            text: 'Retorno Acumulado (%)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Período'
                        }
                    }
                }
            }
        });
    }

    // Criar o gráfico inicial
    createChart(0);

    // Event listener para o seletor de data
    startDateSelector.addEventListener('change', function() {
        createChart(parseInt(this.value));
    });

    // Event listener para o botão de reset
    resetButton.addEventListener('click', function() {
        startDateSelector.value = '0';
        createChart(0);
    });

    // Remover nota HTML se existir
    const oldNote = document.getElementById('msci-note-html');
    if (oldNote) oldNote.remove();
});

// Função para download dos dados do Vontobel Fund
function downloadData() {
    let csvContent = "data:text/csv;charset=utf-8,";
    csvContent += "Fundo,Domicílio,Estilo,Política,Taxa (%),Gestora,Lançamento\n";
    // Dados do Vontobel Fund e concorrentes
    csvContent += "Vontobel Emerging Equity,Luxemburgo,Quality Growth,Acumulação,2.08,Vontobel AM,1999\n";
    csvContent += "iShares Core MSCI EM IMI UCITS ETF,Irlanda,Passivo,Acumulação,0.18,BlackRock,2012\n";
    csvContent += "Vanguard FTSE Emerging Markets UCITS ETF,Irlanda,Passivo,Distribuição,0.22,Vanguard,2012\n";
    csvContent += "abrdn Emerging Markets Equity Fund,Luxemburgo,Active,Acumulação,0.87,abrdn,1994\n";
    csvContent += "Templeton Global Emerging Markets Fund,Luxemburgo,Value,Distribuição,1.00,Franklin Templeton,1991\n";
    csvContent += "JPM Emerging Markets Opportunities Fund,Luxemburgo,Growth,Acumulação,1.75,JPMorgan AM,1994\n";
    // Criação do elemento para download
    var encodedUri = encodeURI(csvContent);
    var link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    link.setAttribute("download", "comparativo_fundos_emergentes.csv");
    document.body.appendChild(link);
    // Download
    link.click();
    document.body.removeChild(link);
}